#!/bin/bash

set -e

. /lib/lsb/init-functions

NAME="Middleware server"
SCRIPT_PATH="/opt/sample/middleware"
VERSION="1.0.nightly"
START_SCRIPT="$SCRIPT_PATH/$VERSION/sample-middleware.sh"
PID_FILE="/var/run/sample-middleware.pid"
LOG="$SCRIPT_PATH/$VERSION/logs/sample-middleware.log"

# ***********************************************
# ***********************************************

ARGS="" # optional start script arguments
DAEMON=$START_SCRIPT

start() {
	$DAEMON $ARGS > /dev/null 2>&1 &
	sleep 1
	PID=$(ps aux | grep sample-middleware | grep .jar | awk '{ print $2 }')
}

logger() {
        echo "`date -u '+%Y-%m-%d %T'` [INIT] $1" >> $LOG
}

case "$1" in
start)
    if [ -f $PID_FILE ]; then
        PID=`cat $PID_FILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            start
        else
            log_warning_msg "$NAME is already running [$PID]"
            exit 0
        fi
    else
        log_daemon_msg "$NAME is starting"
        logger "$NAME is starting"

    start
    fi

    if [ -z $PID ]; then
        log_failure_msg "$NAME failed to start"
        log_end_msg 1
        exit 3
    else
        echo $PID > $PID_FILE
        log_success_msg "$NAME started with pid  [$PID]"

        logger "$NAME started with pid  [$PID]"
        log_end_msg 0
        exit 0
    fi
;;

status)
    if [ -f $PID_FILE ]; then
        PID=`cat $PID_FILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            log_warning_msg "$NAME is not running (process is dead but pidfile exists)"
            exit 1
        else
            log_success_msg "$NAME is running with pid [$PID]"
            exit 0
        fi
    else
        log_failure_msg "$NAME is not running"
        exit 3
    fi
;;

stop)
    log_daemon_msg "Stopping $NAME"
    if [ -f $PID_FILE ]; then
        PID=`cat $PID_FILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            log_failure_msg "$NAME is not running (process dead but pidfile exists)"
            log_end_msg 1
        exit 1
        else
            PID=`cat $PID_FILE`
            kill -HUP $PID
            log_success_msg "$NAME was stopped [$PID]"
            logger "$NAME was stopped [$PID]"

        log_end_msg 0
            rm -f $PID_FILE
            exit 0
        fi
    else
        log_failure_msg "$NAME is not running (pid not found)"
        log_end_msg 1
        exit 3
    fi
;;

restart)
    $0 stop
    sleep 1
    $0 start
;;

*)
    log_daemon_msg "Usage: $0 {status|start|stop|restart}"
    exit 1
esac
